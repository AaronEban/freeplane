import org.apache.tools.ant.taskdefs.condition.Os
import org.apache.tools.ant.filters.*

def appBundlerJar = 'freeplane_framework/mac-appbundler/appbundler-1.0.jar'
ant.taskdef(
    name: "appbundler",
    classname: 'com.oracle.appbundler.AppBundlerTask',
    classpath: appBundlerJar,
    onerror: "report"
)

def macAppPropertiesFile = file('macapp.properties')

Properties macAppProperties = new Properties()
if (macAppPropertiesFile.exists())
{
    macAppProperties.load(new FileInputStream(macAppPropertiesFile))
}

task macDist {}

def defineMacBuildTasks = {

   def jpackage = macAppProperties['macapp.jpackage.jdk'] + '/bin/jpackage'

   def macosapp_input = tasks.create('macosapp_input', Sync){
		mustRunAfter binZip
		doFirst {
			if(! binZip.archivePath.exists())
				ant.fail("File ${binZip.archivePath.path} not found")
		}
		from(zipTree(binZip.archivePath)) {
        include '*'
    }
    into 'build/macosapp/input'
   }

   def jpackage_macosxapp = tasks.create ('jpackage_macosxapp', Exec) {
   	commandline jpackage,
   	 '--name' , 'freeplane',
   	 '--type', 'app-image',
   	 '--input', 'build/macosapp/input',
   	 '--main-jar', 'freeplanelauncher.jar',
   	 '--runtime-image', macAppProperties['macapp.jdk.runtime.image'],
   	 '--dest', 'build/macosapp/app-image'
   }
   
   def macosapp_copyapp= tasks.create ('macosapp_copyapp', Copy) {
	   dependsOn jpackage_macosxapp
		from(zipTree(binZip.archivePath)) {
        	include '*/**'
        }
        into 'build/macosapp/app-image'
   }

   def dmg4mac = tasks.create ('dmg4mac', Exec) {
        def dmgPath = globalDist + taskName('/freeplane_app') + '-' + distVersion + '.dmg';
        doFirst { 
            mkdir globalDist 
            file(dmgPath).delete()
        } 

   	commandline jpackage,
   	 '--name' , 'freeplane',
   	 '--type', 'dmg',
   	 '--app-image', 'build/macosapp/app-image',
     '--mac-package-identifier', 'org.freeplane.core',
     '--mac-package-name', 'Freeplane',
     '--mac-package-signing-prefix', 'freeplane-',
     '--mac-sign',
     '--mac-signing-key-user-name', macAppProperties['macapp.codesign.identity'],
   	 '--dest', globalDist

        dependsOn macosapp_copyapp
    }
}

if ( Os.isFamily(Os.FAMILY_MAC) 
        	&& macAppProperties['macapp.jdk.runtime.image'] != null
        	&& macAppProperties['macapp.jpackage'] != null
        	&& macAppProperties['macapp.codesign.identity'] != null
        	) {
    defineMacBuildTasks()
}

