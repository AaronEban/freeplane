def appBundlerJar = 'freeplane_framework/mac-appbundler/appbundler-1.0.jar'
ant.taskdef(
    name: "appbundler",
    classname: 'com.oracle.appbundler.AppBundlerTask',
    classpath: appBundlerJar,
    onerror: "report"
)

task macosxapp {
    doFirst {
        def build4mac = globalDist + '/build4mac'
        delete build4mac + '/Freeplane.app'
        mkdir build4mac

        ant.appbundler(
            outputdirectory: build4mac,
            name: 'Freeplane',
            displayname: 'Freeplane',
            mainclassname: 'org.freeplane.launcher.Launcher',
            shortversion: distVersion,
            copyright: "Freeplane ${distVersion}",
            identifier: 'org.freeplane.core',
            icon: 'freeplane_framework/mac-appbundler/freeplane.icns',
            signature: '????'
        ) {
            classpath(dir: globalBuild, includes: '*.jar')
            option(value: "-Xmx512m")
            option(value: "-Dapple.laf.useScreenMenuBar=true")
            option(value: "-Xdock:name=Freeplane")
        }

        def macappfullpath = new File(build4mac, 'Freeplane.app')
        def dist_macos_info = macappfullpath.path + '/Contents/Info.plist'
        ant.xslt(in: new File(dist_macos_info),
            style: new File('freeplane_framework/mac-appbundler/mac_info_plist.xslt'),
            out: new File(dist_macos_info + '2')
        )
        java.nio.file.Files.move(java.nio.file.Paths.get(dist_macos_info + '2'), java.nio.file.Paths.get(dist_macos_info),
                   java.nio.file.StandardCopyOption.REPLACE_EXISTING)

        def macjavafullpath = macappfullpath.path + '/Contents/Java'
        copy {
            from(globalBuild) {
                 exclude('**/*.bat')
                 exclude('**/*.exe')
                 exclude('*.jar')
            }
            into(macjavafullpath)
        }

        def macresourcesfullpath = macappfullpath.path + '/Contents/Resources'
        copy {
             from('freeplane_framework/mac-appbundler') {
                 include('freeplanedoc.icns')
             }
             into(macresourcesfullpath)
        }
    }
}
