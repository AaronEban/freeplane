subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
    }
}

configure(subprojects.findAll {it.name =~ /plugin/ || it.name =~ /^freeplane$/ || it.name =~ /^freeplane_framework$/}){
    repositories {
        maven {
            url 'http://www.knopflerfish.org/maven2/'
        }
    }

    dependencies {
        compile group: 'org.knopflerfish', name:'frameworkbundle', version: '4.1.10'
    }
}

// common configuration for all OSGi projects...
configure(subprojects.findAll {it.name =~ /plugin/ || it.name =~ /^freeplane$/ }) {
    apply plugin: 'osgi'

    if (project.name.equals("freeplane"))
       ext.pluginid = 'org.freeplane.core'
    else
       ext.pluginid = project.name.replace("freeplane_plugin_", "org.freeplane.plugin.")

    task copyDeps(type: Copy) {
        from project.configurations.runtime
        into "$buildDir/libs"
    }
    jar.dependsOn copyDeps
}

// common configuration for all plugins...
configure(subprojects.findAll {it.name =~ /plugin/ }) {

    task copyOSGiJars(type: Copy) {
        from ("$buildDir/libs") {
            include("*.jar")
        }
        from ('lib') {
            include("*.jar")
        }
        into('../DIST/plugins/' + pluginid + '/lib/')
    }

    task copyOSGiManifest(type: Copy) {
        from ("$buildDir/tmp/jar/") {
            include("MANIFEST.MF")
        }
        into('../DIST/plugins/' + pluginid + '/META-INF/')
    }

    build.dependsOn copyOSGiJars
    build.dependsOn copyOSGiManifest

}

apply plugin: 'base' // necessary to get the global 'clean' task

// remove DIST/**
task cleanDIST(type: Delete) {
    delete './DIST'
}
clean.dependsOn(cleanDIST)