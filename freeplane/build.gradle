dependencies {
    compile project(':JOrtho_0.4_freeplane')

    compile 'commons-lang:commons-lang:2.6',
            'commons-io:commons-io:2.4',
            'commons-codec:commons-codec:1.7',
            'com.jgoodies:forms:1.2.1',
            'com.github.insubstantial:flamingo:7.2.1',
            'com.github.insubstantial:substance:7.2.1',
            'com.github.insubstantial:substance-flamingo:7.2.1',
            'com.github.insubstantial:substance-swingx:7.2.1',
            'com.github.insubstantial:trident:7.2.1'

    compile files('./lib/SimplyHTML.jar','./lib/idw-gpl.jar')
}

task viewerJar(type: Jar) {
    // use '= project.manifest' to avoid that an OSGi manifest is created!
    manifest = project.manifest {
        attributes("Manifest-Version": "1.0",
                   "Permissions": "all-permissions",
                   "Codebase": "*",
                   "Application-Library-Allowable-Codebase": "*",
                   "Application-Name": "Freeplane Viewer Applet")
    }

    baseName = 'freeplaneviewer'
    dependsOn classes
    from (sourceSets.main.output) {
        exclude('**/application/**')
        exclude('**/osgi/**')
        exclude('**/mindmapmode/**')
        exclude('**/filemode/**')
        exclude('**/ortho/**')
        exclude('**/core/resources/ui/**')
        exclude('translations/**')
    }
    from ('./viewer-resources') {
        exclude('**/appletMenu.mm')
    }
}

task editorJar(type: Jar) {
    // use '= project.manifest' to avoid that an OSGi manifest is created!
    manifest = project.manifest {
        attributes("Manifest-Version": "1.0",
                   "Main-Class": "org.freeplane.main.application.FreeplaneMain")
    }
    baseName = 'freeplaneeditor'
    dependsOn classes
    from (sourceSets.main.output) {
				include("**/application/**")
				include("**/mindmapmode/**")
				include("**/ortho/**")
				include("**/filemode/**")
				include("**/core/resources/ui/**")
				include("translations/**")
				exclude("**/*.jar") // probably not necessary
    }
    from ('./resources') {
				exclude("**/preferences.mm")
				exclude("**/browsemodemenu.mm")
				exclude("**/mindmapmodemenu.mm")
				exclude("**/filemodemenu.mm")
				exclude("**/stylemodemenu.mm")
    }
}

jar.dependsOn viewerJar
jar.dependsOn editorJar